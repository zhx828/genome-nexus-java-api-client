/*
 * Genome Nexus API
 * Genome Nexus Variant Annotation API
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.genome_nexus.client;

import org.genome_nexus.ApiException;
import org.genome_nexus.client.AggregatedHotspots;
import org.genome_nexus.client.GenomicLocation;
import org.genome_nexus.client.Hotspot;
import org.genome_nexus.client.ProteinLocation;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CancerHotspotsControllerApi
 */
@Ignore
public class CancerHotspotsControllerApiTest {

    private final CancerHotspotsControllerApi api = new CancerHotspotsControllerApi();

    
    /**
     * Retrieves hotspot annotations for a specific genomic location
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHotspotAnnotationByGenomicLocationGETTest() throws ApiException {
        String genomicLocation = null;
        List<Hotspot> response = api.fetchHotspotAnnotationByGenomicLocationGET(genomicLocation);

        // TODO: test validations
    }
    
    /**
     * Retrieves hotspot annotations for the provided list of genomic locations
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHotspotAnnotationByGenomicLocationPOSTTest() throws ApiException {
        List<GenomicLocation> genomicLocations = null;
        List<AggregatedHotspots> response = api.fetchHotspotAnnotationByGenomicLocationPOST(genomicLocations);

        // TODO: test validations
    }
    
    /**
     * Retrieves hotspot annotations for a specific variant
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHotspotAnnotationByHgvsGETTest() throws ApiException {
        String variant = null;
        List<Hotspot> response = api.fetchHotspotAnnotationByHgvsGET(variant);

        // TODO: test validations
    }
    
    /**
     * Retrieves hotspot annotations for the provided list of variants
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHotspotAnnotationByHgvsPOSTTest() throws ApiException {
        List<String> variants = null;
        List<AggregatedHotspots> response = api.fetchHotspotAnnotationByHgvsPOST(variants);

        // TODO: test validations
    }
    
    /**
     * Retrieves hotspot annotations for the provided list of transcript id, protein location and mutation type
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHotspotAnnotationByProteinLocationsPOSTTest() throws ApiException {
        List<ProteinLocation> proteinLocations = null;
        List<AggregatedHotspots> response = api.fetchHotspotAnnotationByProteinLocationsPOST(proteinLocations);

        // TODO: test validations
    }
    
    /**
     * Retrieves hotspot annotations for the provided transcript ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHotspotAnnotationByTranscriptIdGETTest() throws ApiException {
        String transcriptId = null;
        List<Hotspot> response = api.fetchHotspotAnnotationByTranscriptIdGET(transcriptId);

        // TODO: test validations
    }
    
    /**
     * Retrieves hotspot annotations for the provided list of transcript ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchHotspotAnnotationByTranscriptIdPOSTTest() throws ApiException {
        List<String> transcriptIds = null;
        List<AggregatedHotspots> response = api.fetchHotspotAnnotationByTranscriptIdPOST(transcriptIds);

        // TODO: test validations
    }
    
}
